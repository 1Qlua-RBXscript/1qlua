local player = game:GetService("Players").LocalPlayer
local running = true

_G.StopBot = function()
    running = false
    if _G.clickThread then
        coroutine.close(_G.clickThread)
    end
end

local function startBot()
    while running do
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local SPAWN_AREA = Vector3.new(-1000, 328, -2)
        local BATTLE_AREA = {
            min = Vector3.new(-800, 0, -800),
            max = Vector3.new(800, 100, 800)
        }
        local TELEPORT = workspace.Lobby.Teleport1
        local CLICK_DELAY = 0.1

        local function spamClicks()
            while running do
                if character and character:FindFirstChildOfClass("Tool") then
                    character:FindFirstChildOfClass("Tool"):Activate()
                end
                task.wait(CLICK_DELAY)
            end
        end

        local function isInArea(pos, area)
            return pos.X > area.min.X and pos.Z > area.min.Z and
                   pos.X < area.max.X and pos.Z < area.max.Z and
                   pos.Y < area.max.Y
        end

        local function findNearestPlayer()
            local closest, dist = nil, math.huge
            local myPos = rootPart.Position
            
            for _, p in ipairs(game.Players:GetPlayers()) do
                if p ~= player and p.Character and p.Character:FindFirstChild("Humanoid") and p.Character.Humanoid.Health > 0 then
                    local targetPart = p.Character:FindFirstChild("HumanoidRootPart")
                    if targetPart then
                        local d = (targetPart.Position - myPos).Magnitude
                        if d < dist then
                            closest = targetPart
                            dist = d
                        end
                    end
                end
            end
            
            return closest
        end

        local function goToPortal()
            local attempts = 0
            while running and attempts < 5 do
                humanoid:MoveTo(TELEPORT.Position)
                
                local startTime = os.clock()
                while running and (rootPart.Position - TELEPORT.Position).Magnitude > 5 do
                    if os.clock() - startTime > 2 then
                        humanoid.Jump = true
                        task.wait(0.5)
                        humanoid:MoveTo(TELEPORT.Position)
                        startTime = os.clock()
                        attempts = attempts + 1
                    end
                    task.wait(0.1)
                end
                
                if (rootPart.Position - TELEPORT.Position).Magnitude <= 5 then
                    return true
                end
            end
            return false
        end


        while running do

            if not character or not humanoid or humanoid.Health <= 0 then
                -- Очистка перед возрождением
                if _G.clickThread then
                    coroutine.close(_G.clickThread)
                    _G.clickThread = nil
                end

                character = player.Character or player.CharacterAdded:Wait()
                humanoid = character:WaitForChild("Humanoid")
                rootPart = character:WaitForChild("HumanoidRootPart")
                
                task.wait(2)
                
                if (rootPart.Position - SPAWN_AREA).Magnitude < 150 then
                    goToPortal()
                end
                
                continue
            end

            local currentPos = rootPart.Position
            local inSpawn = (currentPos - SPAWN_AREA).Magnitude < 150
            local inBattle = isInArea(currentPos, BATTLE_AREA)

            if inSpawn then
                if not goToPortal() then
                    task.wait(1)
                    humanoid.Jump = true
                    task.wait(0.5)
                    goToPortal()
                end
            elseif inBattle then
                if not _G.clickThread then
                    _G.clickThread = task.spawn(spamClicks)
                end

                local target = findNearestPlayer()
                if target then
                    humanoid:MoveTo(target.Position)
                    task.wait(0.1) -- Частое обновление цели
                else
                    humanoid:MoveTo(Vector3.new(0, currentPos.Y, 0))
                    task.wait(1)
                end
            else
                humanoid:MoveTo(Vector3.new(0, currentPos.Y, 0))
                task.wait(0.5)
            end
            
            task.wait(0.1)
        end

        if _G.clickThread then
            coroutine.close(_G.clickThread)
            _G.clickThread = nil
        end
    end
end

task.spawn(startBot)

print("Бот запущен с гарантированным переходом к порталу!")
